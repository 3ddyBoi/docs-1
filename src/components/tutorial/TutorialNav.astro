---
import { getLanguageFromURL } from '../../util';
import { getTutorialPages, getTutorialUnits } from '../../util/getTutorialPages';
import Progress from './Progress.astro';

const currentUrl = Astro.url.pathname.replace(/\/$/, '');
const lang = getLanguageFromURL(Astro.url.pathname);
const tutorialPages = getTutorialPages(await Astro.glob(`../../pages/*/tutorial/**/*.md`), lang);
const units = getTutorialUnits(tutorialPages);
---

<nav>
	<h1>Tutorial Tracker</h1>
	{
		units.map((unit) => (
			<div class="unit">
				<h2 class="heading">{unit.title}</h2>
				<ol class="lessons">
					{unit.lessons.map(async (lesson, index) => (
						<li>
							<div class="header-link">
								<a
									class="lesson-link"
									href={`/${lang}/${lesson.slug}/`}
									aria-current={currentUrl.endsWith(lesson.slug)}
								>
									<Progress path={lesson.url} />
									{index}. {lesson.frontmatter.title}
								</a>
							</div>
							{currentUrl.endsWith(lesson.slug) && (
								<ul class="on-this-page">
									{(await lesson.getHeadings())
										.filter(({ depth }) => depth <= 2)
										.map((h) => (
											<li class="header-link">
												<a href={'#' + h.slug}>{h.text}</a>
											</li>
										))}
								</ul>
							)}
						</li>
					))}
				</ol>
			</div>
		))
	}
</nav>

<style>
	nav {
		--tut-nav-left-column-width: 2rem;
		--tut-nav-gap: 0.25rem;

		width: 100%;
		padding: var(--doc-padding-block) 0.5rem var(--doc-padding-block) 0;
		overflow: auto;
		font-size: var(--theme-text-xs);
	}

	h1 {
		font-size: var(--theme-text-base);
		font-weight: 700;
	}

	.unit + .unit {
		margin-top: 2rem;
	}

	nav ol.lessons {
		margin: 0;
		padding-inline-start: 0;
		list-style: none;
	}

	h2.heading {
		font-size: var(--theme-text-sm);
		margin: 0;
		padding: 0;
		border-bottom: 1px solid var(--theme-divider);
		padding-bottom: 0.25rem;
		margin-bottom: 0.25rem;
	}

	a[aria-current='true'] {
		color: var(--theme-text);
		font-weight: bold;
	}

	.header-link {
		border: 0;
		padding: 0;
	}

	.header-link :global(svg) {
		opacity: 1;
	}

	.header-link .lesson-link {
		display: grid;
		grid-template-columns: var(--tut-nav-left-column-width) 1fr;
		align-items: center;
		gap: var(--tut-nav-gap);
	}

	.header-link .lesson-link > :global(:first-child) {
		justify-self: center;
	}

	.on-this-page {
		--marker-width: 0.75rem;
		list-style: circle;
		margin-left: calc(
			var(--tut-nav-left-column-width) + var(--tut-nav-gap) + var(--marker-width, 0rem)
		);
	}

	.on-this-page :global(::marker) {
		color: var(--theme-text-lighter);
	}
</style>
